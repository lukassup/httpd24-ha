ServerRoot "/usr/local/apache2"
Listen 80

# Dynamic Shared Object (DSO) Support

# To be able to use the functionality of a module which was built as a DSO you
# have to place corresponding `LoadModule' lines at this location so the
# directives contained in it are actually available _before_ they are used.
# Statically compiled modules (those listed by `httpd -l') do not need
# to be loaded here.

LoadModule authn_file_module modules/mod_authn_file.so
#LoadModule authn_dbm_module modules/mod_authn_dbm.so
#LoadModule authn_anon_module modules/mod_authn_anon.so
#LoadModule authn_dbd_module modules/mod_authn_dbd.so
#LoadModule authn_socache_module modules/mod_authn_socache.so
LoadModule authn_core_module modules/mod_authn_core.so
LoadModule authz_host_module modules/mod_authz_host.so
LoadModule authz_groupfile_module modules/mod_authz_groupfile.so
LoadModule authz_user_module modules/mod_authz_user.so
#LoadModule authz_dbm_module modules/mod_authz_dbm.so
#LoadModule authz_owner_module modules/mod_authz_owner.so
#LoadModule authz_dbd_module modules/mod_authz_dbd.so
LoadModule authz_core_module modules/mod_authz_core.so
#LoadModule authnz_ldap_module modules/mod_authnz_ldap.so
#LoadModule authnz_fcgi_module modules/mod_authnz_fcgi.so
LoadModule access_compat_module modules/mod_access_compat.so
LoadModule auth_basic_module modules/mod_auth_basic.so
#LoadModule auth_form_module modules/mod_auth_form.so
#LoadModule auth_digest_module modules/mod_auth_digest.so
#LoadModule allowmethods_module modules/mod_allowmethods.so
#LoadModule isapi_module modules/mod_isapi.so
#LoadModule file_cache_module modules/mod_file_cache.so
#LoadModule cache_module modules/mod_cache.so
#LoadModule cache_disk_module modules/mod_cache_disk.so
#LoadModule cache_socache_module modules/mod_cache_socache.so
#LoadModule socache_shmcb_module modules/mod_socache_shmcb.so
#LoadModule socache_dbm_module modules/mod_socache_dbm.so
#LoadModule socache_memcache_module modules/mod_socache_memcache.so
LoadModule watchdog_module modules/mod_watchdog.so
#LoadModule macro_module modules/mod_macro.so
#LoadModule dbd_module modules/mod_dbd.so
#LoadModule bucketeer_module modules/mod_bucketeer.so
#LoadModule dumpio_module modules/mod_dumpio.so
#LoadModule echo_module modules/mod_echo.so
#LoadModule case_filter_module modules/mod_case_filter.so
#LoadModule case_filter_in_module modules/mod_case_filter_in.so
#LoadModule buffer_module modules/mod_buffer.so
#LoadModule data_module modules/mod_data.so
#LoadModule ratelimit_module modules/mod_ratelimit.so
LoadModule reqtimeout_module modules/mod_reqtimeout.so
#LoadModule ext_filter_module modules/mod_ext_filter.so
#LoadModule request_module modules/mod_request.so
#LoadModule include_module modules/mod_include.so
LoadModule filter_module modules/mod_filter.so
#LoadModule reflector_module modules/mod_reflector.so
#LoadModule charset_lite_module modules/mod_charset_lite.so
LoadModule deflate_module modules/mod_deflate.so
#LoadModule xml2enc_module modules/mod_xml2enc.so
LoadModule mime_module modules/mod_mime.so
LoadModule log_config_module modules/mod_log_config.so
#LoadModule log_debug_module modules/mod_log_debug.so
#LoadModule log_forensic_module modules/mod_log_forensic.so
#LoadModule logio_module modules/mod_logio.so
LoadModule env_module modules/mod_env.so
#LoadModule mime_magic_module modules/mod_mime_magic.so
#LoadModule expires_module modules/mod_expires.so
LoadModule headers_module modules/mod_headers.so
#LoadModule ident_module modules/mod_ident.so
#LoadModule usertrack_module modules/mod_usertrack.so
#LoadModule unique_id_module modules/mod_unique_id.so
LoadModule setenvif_module modules/mod_setenvif.so
LoadModule version_module modules/mod_version.so
#LoadModule remoteip_module modules/mod_remoteip.so
LoadModule proxy_module modules/mod_proxy.so
#LoadModule proxy_connect_module modules/mod_proxy_connect.so
#LoadModule proxy_ftp_module modules/mod_proxy_ftp.so
LoadModule proxy_http_module modules/mod_proxy_http.so
#LoadModule proxy_fcgi_module modules/mod_proxy_fcgi.so
#LoadModule proxy_scgi_module modules/mod_proxy_scgi.so
#LoadModule proxy_fdpass_module modules/mod_proxy_fdpass.so
#LoadModule proxy_wstunnel_module modules/mod_proxy_wstunnel.so
#LoadModule proxy_ajp_module modules/mod_proxy_ajp.so
LoadModule proxy_balancer_module modules/mod_proxy_balancer.so
#LoadModule proxy_express_module modules/mod_proxy_express.so
LoadModule proxy_hcheck_module modules/mod_proxy_hcheck.so
#LoadModule session_module modules/mod_session.so
#LoadModule session_cookie_module modules/mod_session_cookie.so
#LoadModule session_crypto_module modules/mod_session_crypto.so
#LoadModule session_dbd_module modules/mod_session_dbd.so
LoadModule slotmem_shm_module modules/mod_slotmem_shm.so
#LoadModule slotmem_plain_module modules/mod_slotmem_plain.so
#LoadModule ssl_module modules/mod_ssl.so
#LoadModule optional_hook_export_module modules/mod_optional_hook_export.so
#LoadModule optional_hook_import_module modules/mod_optional_hook_import.so
#LoadModule optional_fn_import_module modules/mod_optional_fn_import.so
#LoadModule optional_fn_export_module modules/mod_optional_fn_export.so
#LoadModule dialup_module modules/mod_dialup.so
LoadModule http2_module modules/mod_http2.so
LoadModule proxy_http2_module modules/mod_proxy_http2.so
LoadModule lbmethod_byrequests_module modules/mod_lbmethod_byrequests.so
LoadModule lbmethod_bytraffic_module modules/mod_lbmethod_bytraffic.so
LoadModule lbmethod_bybusyness_module modules/mod_lbmethod_bybusyness.so
LoadModule lbmethod_heartbeat_module modules/mod_lbmethod_heartbeat.so
LoadModule unixd_module modules/mod_unixd.so
#LoadModule heartbeat_module modules/mod_heartbeat.so
#LoadModule heartmonitor_module modules/mod_heartmonitor.so
LoadModule status_module modules/mod_status.so
LoadModule autoindex_module modules/mod_autoindex.so
#LoadModule asis_module modules/mod_asis.so
LoadModule info_module modules/mod_info.so
#LoadModule suexec_module modules/mod_suexec.so
#LoadModule vhost_alias_module modules/mod_vhost_alias.so
#LoadModule negotiation_module modules/mod_negotiation.so
LoadModule dir_module modules/mod_dir.so
#LoadModule imagemap_module modules/mod_imagemap.so
#LoadModule actions_module modules/mod_actions.so
#LoadModule speling_module modules/mod_speling.so
LoadModule alias_module modules/mod_alias.so
#LoadModule rewrite_module modules/mod_rewrite.so

<IfModule unixd_module>
    User daemon
    Group daemon
</IfModule>

# 'Main' server configuration

# The directives in this section set up the values used by the 'main'
# server, which responds to any requests that aren't handled by a
# <VirtualHost> definition.  These values also provide defaults for
# any <VirtualHost> containers you may define later in the file.
#
# All of these directives may appear inside <VirtualHost> containers,
# in which case these default settings will be overridden for the
# virtual host being defined.

ServerAdmin admin@example.com


# ServerName gives the name and port that the server uses to identify itself.
# This can often be determined automatically, but we recommend you specify
# it explicitly to prevent problems during startup.

# If your host doesn't have a registered DNS name, enter its IP address here.

#ServerName www.example.com:80

# Enable HTTP/2+TLS (h2), HTTP/2 (h2c) and HTTP/1.1
Protocols h2 h2c http/1.1

<Directory />
  AllowOverride none
  Require all denied
</Directory>

DocumentRoot "/usr/local/apache2/htdocs"
<Directory "/usr/local/apache2/htdocs">
  Options Indexes FollowSymLinks
  AllowOverride None
  <IfModule ssl_module>
    # Require secure transport if mod_ssl is available
    Require ssl
  </IfModule>
  <IfModule !ssl_module>
    Require all granted
  </IfModule>
</Directory>

<IfModule dir_module>
  DirectoryIndex index.html
</IfModule>

<Files ".ht*">
  Require all denied
</Files>


# Log to stderr
ErrorLog /proc/self/fd/2

# Possible values include: debug, info, notice, warn, error, crit, alert, emerg
LogLevel info

<IfModule log_config_module>
  # The following directives define some format nicknames for use with
  # a CustomLog directive (see below).

  LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\"" combined
  LogFormat "%h %l %u %t \"%r\" %>s %b" common

  <IfModule logio_module>
    # You need to enable mod_logio.c to use %I and %O
    LogFormat "%h %l %u %t \"%r\" %>s %b \"%{Referer}i\" \"%{User-Agent}i\" %I %O" combinedio
  </IfModule>

  # The location and format of the access logfile (Common Logfile Format).
  # If you do not define any access logfiles within a <VirtualHost>
  # container, they will be logged here.  Contrariwise, if you *do*
  # define per-<VirtualHost> access logfiles, transactions will be
  # logged therein and *not* in this file.
  CustomLog /proc/self/fd/1 common

  # If you prefer a logfile with access, agent, and referer information
  # (Combined Logfile Format) you can use the following directive.

  #CustomLog "logs/access_log" combined
</IfModule>

<IfModule alias_module>
    # Redirect permanent /foo http://www.example.com/bar
    # Alias /webpath /full/filesystem/path
</IfModule>

<IfModule headers_module>
  # mitigate httpoxy vuln
  RequestHeader unset Proxy early
</IfModule>

<IfModule mime_module>
  TypesConfig conf/mime.types
  AddEncoding x-compress .Z
  AddEncoding x-gzip .gz .tgz
</IfModule>

<IfModule deflate_module>
  AddOutputFilterByType DEFLATE text/html text/plain text/xml text/css text/csv text/javascript application/javascript application/json
</IfModule>


<IfModule mime_magic_module>
  # The mod_mime_magic module allows the server to use various hints from the
  # contents of the file itself to determine its type.  The MIMEMagicFile
  # directive tells the module where the hint definitions are located.
  MIMEMagicFile conf/magic
</IfModule>

# ErrorDocument 500 /500.html
# ErrorDocument 404 /404.html
# ErrorDocument 403 /403.html


# MaxRanges: Maximum number of Ranges in a request before
# returning the entire resource, or one of the special
# values 'default', 'none' or 'unlimited'.
# Default setting is to accept 200 Ranges.
#MaxRanges unlimited

EnableMMAP off
EnableSendfile on

# Multi-language error messages
#Include conf/extra/httpd-multilang-errordoc.conf

# Fancy directory listings
#Include conf/extra/httpd-autoindex.conf

# Language settings
#Include conf/extra/httpd-languages.conf

# Various default settings
Include conf/extra/httpd-default.conf

#
#   MPM configuration
#

<IfModule !mpm_netware_module>
  PidFile "logs/httpd.pid"
</IfModule>

<IfModule mpm_prefork_module>
  StartServers             5
  MinSpareServers          5
  MaxSpareServers         10
  MaxRequestWorkers      250
  MaxConnectionsPerChild   0
</IfModule>

<IfModule mpm_worker_module>
  StartServers             3
  MinSpareThreads         75
  MaxSpareThreads        250 
  ThreadsPerChild         25
  MaxRequestWorkers      400
  MaxConnectionsPerChild   0
</IfModule>

<IfModule mpm_event_module>
  StartServers             3
  MinSpareThreads         75
  MaxSpareThreads        250
  ThreadsPerChild         25
  MaxRequestWorkers      400
  MaxConnectionsPerChild   0
</IfModule>


#
#   Server status
#

<IfModule status_module>

  # Simple status
  <Location /server-status>
    SetHandler server-status
  </Location>

  <IfModule proxy_module>
    ProxyStatus on
  </IfModule>

  # Extended status
  <IfModule info_module>
  ExtendedStatus On
    <Location /server-info>
      SetHandler server-info
    </Location>
  </IfModule>

  # Balancer manager
  <IfModule proxy_balancer_module>
    <Location "/balancer-manager">
      SetHandler balancer-manager
    </Location>
  </IfModule>

</IfModule>


#
# Virtual hosts
#

<IfModule vhost_module>
# <VirtualHost *:80>
#     ServerAdmin webmaster@dummy-host.example.com
#     DocumentRoot "/usr/local/apache2/docs/dummy-host.example.com"
#     ServerName dummy-host.example.com
#     ServerAlias www.dummy-host.example.com
#     ErrorLog "logs/dummy-host.example.com-error_log"
#     CustomLog "logs/dummy-host.example.com-access_log" common
# </VirtualHost>
# 
# <VirtualHost *:80>
#     ServerAdmin webmaster@dummy-host2.example.com
#     DocumentRoot "/usr/local/apache2/docs/dummy-host2.example.com"
#     ServerName dummy-host2.example.com
#     ErrorLog "logs/dummy-host2.example.com-error_log"
#     CustomLog "logs/dummy-host2.example.com-access_log" common
# </VirtualHost>
</IfModule>

#
#   SSL configuration
#

<IfModule ssl_module>

  SSLRandomSeed startup builtin
  SSLRandomSeed startup file:/dev/random  512
  SSLRandomSeed startup file:/dev/urandom 512
  SSLRandomSeed connect builtin
  SSLRandomSeed connect file:/dev/random  512
  SSLRandomSeed connect file:/dev/urandom 512

  SSLCipherSuite          ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  SSLProxyCipherSuite     ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
  SSLHonorCipherOrder     on
  SSLProtocol             all -SSLv3 -TLSv1 -TLSv1.1
  SSLProxyProtocol        all -SSLv3 -TLSv1 -TLSv1.1
  SSLPassPhraseDialog     builtin
  SSLSessionCache         "shmcb:/usr/local/apache2/logs/ssl_scache(512000)"
  SSLSessionCacheTimeout  300
  SSLUseStapling          On
  SSLStaplingResponderTimeout 5
  SSLStaplingReturnResponderErrors off
  SSLStaplingCache        "shmcb:/usr/local/apache2/logs/ssl_stapling(128000)"
  SSLSessionTickets       off
  #SSLStaplingStandardCacheTimeout 3600
  #SSLStaplingErrorCacheTimeout 600

  # Harden proxy
  SSLProxyCheckPeerName on
  SSLProxyCheckPeerExpire on
  SSLProxyVerify      require
  SSLProxyVerifyDepth 3

  Listen 443

  <VirtualHost _default_:443>

  DocumentRoot "/usr/local/apache2/htdocs"
  ServerName www.example.com:443
  ErrorLog "/proc/self/fd/2"
  TransferLog "/proc/self/fd/1"

  <IfModule headers_module>
    # HSTS (mod_headers is required) (15768000 seconds = 6 months)
    # Header always set Strict-Transport-Security "max-age=15768000"
  </IfModule>

  SSLEngine on

  # Server Certificate:
  SSLCertificateFile "/usr/local/apache2/conf/server.crt"
  #SSLCertificateFile "/usr/local/apache2/conf/server-dsa.crt"
  #SSLCertificateFile "/usr/local/apache2/conf/server-ecc.crt"

  # Server Private Key:
  SSLCertificateKeyFile "/usr/local/apache2/conf/server.key"
  #SSLCertificateKeyFile "/usr/local/apache2/conf/server-dsa.key"
  #SSLCertificateKeyFile "/usr/local/apache2/conf/server-ecc.key"

  # Server Certificate Chain:
  #SSLCertificateChainFile "/usr/local/apache2/conf/server-ca.crt"

  # Certificate Authority (CA):
  # Set the CA certificate verification path where to find CA
  # certificates for client authentication or alternatively one
  # huge file containing all of them (file must be PEM encoded)
  # Note: Inside SSLCACertificatePath you need hash symlinks
  #       to point to the certificate files. Use the provided
  #       Makefile to update the hash symlinks after changes.
  #SSLCACertificatePath "/usr/local/apache2/conf/ssl.crt"
  #SSLCACertificateFile "/usr/local/apache2/conf/ssl.crt/ca-bundle.crt"

  # Certificate Revocation Lists (CRL):
  # Set the CA revocation path where to find CA CRLs for client
  # authentication or alternatively one huge file containing all
  # of them (file must be PEM encoded).
  # The CRL checking mode needs to be configured explicitly
  # through SSLCARevocationCheck (defaults to "none" otherwise).
  # Note: Inside SSLCARevocationPath you need hash symlinks
  #       to point to the certificate files. Use the provided
  #       Makefile to update the hash symlinks after changes.
  #SSLCARevocationPath "/usr/local/apache2/conf/ssl.crl"
  #SSLCARevocationFile "/usr/local/apache2/conf/ssl.crl/ca-bundle.crl"
  #SSLCARevocationCheck chain

  # Client Authentication (Type):
  # Client certificate verification type and depth.  Types are
  # none, optional, require and optional_no_ca.  Depth is a
  # number which specifies how deeply to verify the certificate
  # issuer chain before deciding the certificate is not valid.
  #SSLVerifyClient require
  #SSLVerifyDepth  10

  </VirtualHost>
</IfModule>

BalancerPersist on

<Proxy "balancer://app">
  ProxySet lbmethod=bytraffic growth=1
  ProxyHCExpr app_ok {%{REQUEST_STATUS} =~ /^[234]/}
  ProxyHCTemplate lbcheck hcinterval=5 hcpasses=3 hcfails=1 hcmethod=GET hcuri=/ hcexpr=app_ok
  BalancerMember "http://app1:8888" hctemplate=lbcheck
  BalancerMember "http://app2:8888" hctemplate=lbcheck
  BalancerMember "http://app3:8888" hctemplate=lbcheck
  # BalancerMember "http://app4:8888" hctemplate=lbcheck
</Proxy>

<Location "/">
  ProxyPass "balancer://app"
  ProxyPassReverse "balancer://app"
  ProxyErrorOverride on
  ProxyPreserveHost on
</Location>

<LocationMatch "^/(server-info|server-status|balancer-manager)">
  ProxyPass "!"
</LocationMatch>
